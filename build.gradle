plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'java'
}

// Set project version using a property, defaulting to 'unspecified' if not found
version = project.findProperty("${project.name}-version") ?: 'unspecified'
group = 'io.github.mcengine'

allprojects {
    group = 'io.github.mcengine'

    apply plugin: 'java'
    apply plugin: 'com.github.johnrengelman.shadow'

    repositories {
        mavenCentral()
        mavenLocal()

        // SpigotMC repository for Bukkit and Spigot dependencies
        maven {
            url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots'
            content {
                includeGroup 'org.bukkit'
                includeGroup 'org.spigotmc'
            }
        }

        // Additional Maven repositories
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
        maven { url 'https://oss.sonatype.org/content/repositories/central' }

        maven { url 'https://repo.onarandombox.com/content/groups/public/' }

        maven { url 'https://repo.viaversion.com' }
    }
}

subprojects {
    apply plugin: 'java'

    // Disable default JAR task if necessary
    tasks.named('jar').configure {
        enabled = false
    }

    // List of projects that should not build the shadow JAR
    def excludeBuildProjects = [':server']
    if (project.path in excludeBuildProjects) {
        tasks.matching { it.name == 'shadowJar' }.configureEach {
            enabled = false
        }
    }

    // Ensure version property is assigned correctly
    version = project.findProperty("${project.name}-version") ?: 'unspecified'

    // Configure Shadow JAR plugin
    shadowJar {
        archiveClassifier = null
        destinationDirectory.set(file("${rootProject.buildDir}/libs"))
    }

    // Dependencies for server-related projects
    if (project.path.startsWith(':server:')) {
        dependencies {
            implementation project(path: ':mcengine-survival-api', configuration: 'shadow')
            implementation project(path: ':common', configuration: 'shadow')
        }
    }

    // SpigotMC-specific resource processing (for plugin.yml)
    if (project.name == 'spigotmc') {
        processResources {
            def props = [version: version]
            inputs.properties(props)
            filteringCharset 'UTF-8'
            filesMatching('plugin.yml') {
                expand(props)
            }
        }
    }

    // Publishing setup for mcengine-survival-api
    if (project.name == 'mcengine-survival-api') {
        apply plugin: 'maven-publish'

        publishing {
            repositories {
                maven {
                    name = 'GitHubPackages'
                    url = uri('https://maven.pkg.github.com/MCEngine/survival')
                    credentials {
                        username = System.getenv('GIT_USERNAME')
                        password = System.getenv('MCENGINE_GITHUB_TOKEN_PKG_PUBLISH_Survival') ?:
                                  System.getenv('MCENGINE_GITHUB_TOKEN_PKG_PUBLISH')
                    }
                }
            }
            publications {
                mavenJava(MavenPublication) {
                    artifact(tasks.named('shadowJar').get())

                    pom {
                        name.set('MCEngine Survival API')
                        description.set('API for survival operations in MCEngine projects')
                        url.set('https://github.com/MCEngine/survival')

                        scm {
                            connection.set('scm:git:git://github.com/MCEngine/survival.git')
                            developerConnection.set('scm:git:ssh://github.com:MCEngine/survival.git')
                            url.set('https://github.com/MCEngine/survival')
                        }

                        developers {
                            developer {
                                id.set('JetsadaWijit')
                                name.set('Jetsada Wijit')
                                email.set('jetsadawijit@outlook.com')
                                url.set('https://github.com/JetsadaWijit')
                            }
                        }
                    }
                }
            }
        }
    }
}

// Root project build.gradle
dependencies {
    implementation project(path: ':mcengine-survival-api', configuration: 'shadow')
    implementation project(path: ':common', configuration: 'shadow')
    implementation project(path: ':nms', configuration: 'shadow')

    // Include all server subprojects like :server:spigotmc
    rootProject.project(':server').subprojects.each { serverSubproject ->
        implementation project(path: serverSubproject.path, configuration: 'shadow')
    }
}

// Root shadow JAR configuration
shadowJar {
    version = version
    archiveClassifier = "RELEASE"
    archiveBaseName.set('MCEngineSurvival')
}

// Disable default JAR task if necessary
tasks.named('jar').configure {
    enabled = false
}

// Ensure build depends on shadow JAR
build.dependsOn(shadowJar)
